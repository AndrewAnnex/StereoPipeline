.. _outputfiles:

Guide to Output Files
=====================

The ``stereo`` tool generates a variety of intermediate files that are
useful for debugging. These are listed below, along with brief
descriptions about the contents of each file. Note that the prefix of
the filename for all of these files is dictated by the final command
line argument to ``stereo``. Run ``stereo --help`` for details.

\*.vwip - image feature files
    If ``alignment-method`` is not ``none``, the Stereo Pipeline will
    automatically search for image features to use for tie-points. Raw
    image features are stored in ``*.vwip`` files; one per input image.
    For example, if your images are ``left.cub`` and ``right.cub``
    you’ll get ``left.vwip`` and ``right.vwip``. Note: these files can
    also be generated by hand (and with finer grained control over
    detection algorithm options) using the ``ipfind`` utility.

\*.match - image to image tie-points
    The match file lists a select group of unique points out of the
    previous ``.vwip`` files that have been identified and matched in a
    pair of images. For example, if your images are ``left.cub`` and
    ``right.cub`` you’ll get a ``left__right.match`` file.

    The ``.vwip`` and ``.match`` files are meant to serve as cached
    tie-point information, and they help speed up the pre-processing
    phase of the Stereo Pipeline: if these files exist then the
    ``stereo`` program will skip over the interest point alignment stage
    and instead use the cached tie-points contained in the ``*.match``
    files. In the rare case that one of these files did get corrupted or
    your input images have changed, you may want to delete these files
    and allow ``stereo`` to regenerate them automatically. This is also
    recommended if you have upgraded the Stereo Pipeline software.

    Both ``.vwip`` and ``.match`` files can be visualized in
    ``stereo_gui`` (:numref:`stereo_gui`), and ``.match`` files can be
    converted to plain text for inspection with
    ``parse_match_file.py`` (:numref:`parse_match_file`).

\*-L.tif - rectified left input image
    The left input image of the stereo pair, saved after the
    pre-processing step. This image may be normalized, but should
    otherwise be identical to the original left input image.

\*-R.tif - rectified right input image
    Right input image of the stereo pair, after the pre-processing
    step. This image may be normalized and possibly translated, scaled,
    and/or rotated to roughly align it with the left image, but should
    otherwise be identical to the original right input image.

\*-lMask.tif - mask for left rectified image
    This file and \*-rMask.tif contain binary masks for the input
    images. They are used throughout the stereo process to mask
    out pixels where there is no input data.

\*-rMask.tif - mask for right rectified image
    See \*-lMask.tif, above.

\*-align-L.exr - left pre-alignment matrix
    The 3 |times| 3 affine transformation matrices that are used
    to warp the left and right images to roughly align them. This
    file and \*-align-R.exr are only generated if ``alignment-method``
    is not ``none`` in the ``stereo.default`` file. Normally, a
    single transform is enough to warp one image to another (for
    example, the right image to the left). The reason we use two
    transforms is the following: after the right image is warped
    to the left, we would like to additionally transform both images
    so that the origin (0, 0) in the left image would correspond
    to the same location in the right image. This will somewhat
    improve the efficiency of subsequent processing.

\*-align-R.exr - right pre-alignment matrix
    See \*-align-L.exr, above.

\*-D.tif - disparity map after the disparity map initialization phase
    This is the disparity map generated by the correlation algorithm in
    the initialization phase. It contains integer values of disparity
    that are used to seed the subsequent sub-pixel correlation phase.
    It is largely unfiltered, and may contain some bad matches.

    Disparity map files are stored in OpenEXR format as 3-channel, 32-bit
    floating point images. (Channel 0 = horizontal disparity, Channel 1 =
    vertical disparity, and Channel 2 = good pixel mask)

\*-RD.tif - disparity map after sub-pixel correlation
    This file contains the disparity map after sub-pixel refinement.
    Pixel values now have sub-pixel precision, and some outliers have
    been rejected by the sub-pixel matching process.

\*-F-corrected.tif - intermediate data product
    Only created when ``alignment-method`` is not ``none``. This is
    ``*-F.tif`` with effects of interest point alignment removed.

\*-F.tif - filtered disparity map
    The filtered, sub-pixel disparity map with outliers removed (and
    holes filled with the inpainting algorithm if ``FILL_HOLES`` is
    on). This is the final version of the disparity map.

\*-GoodPixelMap.tif - map of good pixels
    An image showing which pixels were matched by the stereo correlator
    (gray pixels), and which were filled in by the hole filling
    algorithm (red pixels).

\*-PC.tif - point cloud image
    The point cloud image is generated by the triangulation phase of
    Stereo Pipeline. Each pixel in the point cloud image corresponds to
    a pixel in the left input image (\*-L.tif). The point cloud has four
    channels, the first three are the Cartesian coordinates of each
    point, and the last one has the intersection error of the two rays
    which created that point (the intersection error is the closest
    distance between rays). By default, the origin of the Cartesian
    coordinate system being used is a point in the neighborhood of the
    point cloud. This makes the values of the points in the cloud
    relatively small, and we save them in single precision (32 bits).
    This origin is saved in the point cloud as well using the tag
    POINT_OFFSET in the GeoTiff header. To output point clouds using
    double precision with the origin at the planet center, call
    ``stereo_tri`` with the option
    ``--save-double-precision-point-cloud``. This can effectively
    double the size of the point cloud.

    All these images that are single-band can be visualized in
    ``stereo_gui`` (:numref:`stereo_gui`). The
    disparities can be first split into the individual horizontal and
    vertical disparity files using ``disparitydebug``, then they can be
    seen in this viewer as well.

    If the input images are map-projected (georeferenced) and the
    alignment method is ``none``, all the output images listed above,
    will also be georeferenced, and hence can be overlayed in
    ``stereo_gui`` on top of the input images (the outputs of
    ``disparitydebug`` will then be georeferenced as well).

    The point cloud file saves the datum (and projection if available)
    inferred from the input images, regardless of whether these images
    are map-projected or not.

    The ``point2mesh`` and ``point2dem`` programs can be used to convert
    the point cloud to formats that are easier to visualize.

\*-stereo.default - backup of the Stereo Pipeline settings file
    This is a copy of the ``stereo.default`` file used by ``stereo``.
    It is stored alongside the output products as a record of the
    settings that were used for this particular stereo processing task.


.. |times| unicode:: U+00D7 .. MULTIPLICATION SIGN
